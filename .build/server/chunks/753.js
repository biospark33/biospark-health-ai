"use strict";exports.id=753,exports.ids=[753],exports.modules={14749:(e,t,r)=>{r.d(t,{Ps:()=>a});var s=r(67297);class n{generateContentHash(e){let t=JSON.stringify({userId:e.userId,eventType:e.eventType,resource:e.resource,resourceId:e.resourceId,action:e.action,timestamp:new Date().toISOString(),success:e.success??!0});return(0,s.e4)(t)}assessRiskLevel(e){return"delete"===e.eventType||"delete"===e.action||e.errorMessage?.includes("unauthorized")||e.errorMessage?.includes("breach")?"critical":"export"===e.eventType||"system"===e.resource||"update"===e.action&&"user_profile"===e.resource?"high":"data_access"===e.eventType||"read"===e.action&&"user_profile"!==e.resource?"medium":"low"}sanitizeDataForLogging(e){if(!e)return null;let t={...e},r=["password","token","key","secret","ssn","dob"],s=e=>{if("object"!=typeof e||null===e)return e;let t=Array.isArray(e)?[]:{};for(let[n,a]of Object.entries(e)){let e=n.toLowerCase();r.some(t=>e.includes(t))?t[n]="[REDACTED]":"object"==typeof a?t[n]=s(a):t[n]=a}return t};return s(t)}async logEvent(e){try{let t=e.riskLevel||this.assessRiskLevel(e),r=this.generateContentHash(e),s=new Date,n={...e,timestamp:s,contentHash:r,riskLevel:t,success:e.success??!0,dataAccessed:this.sanitizeDataForLogging(e.dataAccessed),changes:this.sanitizeDataForLogging(e.changes)};console.log(`[AUDIT] ${JSON.stringify(n)}`),s.toISOString(),e.eventType,e.resource,e.action,e.userId}catch(e){throw console.error("Audit logging failed:",e),Error(`Audit logging failure: ${e.message}`)}}async logAuth(e,t,r,s=!0,n){await this.logEvent({userId:e,sessionId:r.sessionId,eventType:t,resource:"auth",action:t,ipAddress:this.getClientIP(r),userAgent:r.headers?.["user-agent"],endpoint:r.url,method:r.method,success:s,errorMessage:n,riskLevel:s?"low":"high"})}async logDataAccess(e,t,r,s,n,a,i){await this.logEvent({userId:e,sessionId:n.sessionId,eventType:"data_access",resource:t,resourceId:r,action:s,ipAddress:this.getClientIP(n),userAgent:n.headers?.["user-agent"],endpoint:n.url,method:n.method,dataAccessed:a,changes:i})}async logAnalysisRequest(e,t,r,s=!0,n){await this.logEvent({userId:e,sessionId:r.sessionId,eventType:"analysis_request",resource:"analysis",action:"create",ipAddress:this.getClientIP(r),userAgent:r.headers?.["user-agent"],endpoint:r.url,method:r.method,dataAccessed:{analysisType:t},success:s,errorMessage:n,riskLevel:s?"medium":"high"})}async logDataExport(e,t,r,s,n=!0){await this.logEvent({userId:e,sessionId:s.sessionId,eventType:"export",resource:"analysis",action:"export",ipAddress:this.getClientIP(s),userAgent:s.headers?.["user-agent"],endpoint:s.url,method:s.method,dataAccessed:{exportType:t,resourceCount:r.length},success:n,riskLevel:"high"})}async logSystemEvent(e,t,r,s="medium"){await this.logEvent({userId:r,eventType:"data_access",resource:"system",action:"read",dataAccessed:{eventType:e,details:t},riskLevel:s})}getClientIP(e){return e.headers?.["x-forwarded-for"]?.split(",")[0]||e.headers?.["x-real-ip"]||e.connection?.remoteAddress||e.socket?.remoteAddress||"unknown"}async queryAuditLogs(e){return[]}async generateComplianceReport(e,t){let r=await this.queryAuditLogs({startDate:e,endDate:t});return{period:{startDate:e,endDate:t},totalEvents:r.length,eventsByType:this.groupBy(r,"eventType"),eventsByRisk:this.groupBy(r,"riskLevel"),uniqueUsers:new Set(r.map(e=>e.userId)).size,complianceScore:this.calculateComplianceScore(r),recommendations:this.generateRecommendations(r)}}groupBy(e,t){return e.reduce((e,r)=>{let s=r[t]||"unknown";return e[s]=(e[s]||0)+1,e},{})}calculateComplianceScore(e){if(0===e.length)return 100;let t=e.filter(e=>"critical"===e.riskLevel).length;return Math.round(100*Math.max(0,100-(10*t+5*e.filter(e=>"high"===e.riskLevel).length+3*e.filter(e=>!e.success).length)/e.length*100))/100}generateRecommendations(e){let t=[];return e.filter(e=>"critical"===e.riskLevel).length>0&&t.push("Review and investigate critical risk events"),e.filter(e=>"login"===e.eventType&&!e.success).length>10&&t.push("Implement additional login security measures"),e.filter(e=>"export"===e.eventType).length>50&&t.push("Review data export patterns for compliance"),t}}let a=new n},30467:(e,t,r)=>{r.d(t,{PA:()=>i,Ug:()=>s,cI:()=>o});let s={DATA_PROCESSING:{type:"data_processing",title:"Health Data Processing",description:"Allow processing of your health data for analysis and insights",required:!0,version:"1.0"},ANALYSIS:{type:"analysis",title:"Health Analysis",description:"Allow AI-powered analysis of your health data and biomarkers",required:!0,version:"1.0"},RESEARCH:{type:"research",title:"Research Participation",description:"Allow anonymized use of your data for health research (optional)",required:!1,version:"1.0"},MARKETING:{type:"marketing",title:"Marketing Communications",description:"Receive health tips and product recommendations (optional)",required:!1,version:"1.0"},SHARING:{type:"sharing",title:"Data Sharing",description:"Share data with healthcare providers you authorize (optional)",required:!1,version:"1.0"}},n={dataRetentionPeriod:2555,allowResearch:!1,allowMarketing:!1,allowDataSharing:!1,allowAnalytics:!0,minimumDataCollection:!0};class a{async recordConsent(e,t,r,n,a){let i={id:this.generateConsentId(),userId:e,consentType:t,granted:r,version:s[t.toUpperCase()]?.version||"1.0",consentText:a||this.getConsentText(t),grantedAt:r?new Date:void 0,revokedAt:r?void 0:new Date,ipAddress:this.getClientIP(n),userAgent:n.headers?.["user-agent"]};return console.log(`[CONSENT] Recorded consent: ${JSON.stringify(i)}`),i}async hasValidConsent(e,t){return!0}async getUserConsents(e){return[]}async revokeConsent(e,t,r){await this.recordConsent(e,t,!1,r),"data_processing"===t&&await this.scheduleDataDeletion(e)}async updatePrivacySettings(e,t,r){let s={...await this.getPrivacySettings(e),...t};return this.validatePrivacySettings(s),console.log(`[PRIVACY] Updated settings for user ${e}:`,s),await this.logPrivacyChange(e,t,r),s}async getPrivacySettings(e){return n}async scheduleDataDeletion(e){let t=await this.getPrivacySettings(e),r=new Date;r.setDate(r.getDate()+t.dataRetentionPeriod),console.log(`[DATA_RETENTION] Scheduled deletion for user ${e} on ${r}`)}async processDataDeletion(e,t){if(await this.hasValidConsent(e,"data_processing"))throw Error("Cannot delete data while processing consent is active");console.log(`[DATA_DELETION] Processing deletion request for user ${e}`)}generateConsentForm(e){return e.map(e=>{let t=s[e.toUpperCase()];if(!t)throw Error(`Unknown consent type: ${e}`);return{type:t.type,title:t.title,description:t.description,required:t.required,version:t.version,consentText:this.getConsentText(e)}})}async validateConsentForOperation(e,t){for(let r of this.getRequiredConsentsForOperation(t))if(!await this.hasValidConsent(e,r))return!1;return!0}generateConsentId(){return`consent_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}getConsentText(e){return({data_processing:"I consent to the processing of my health data for the purpose of health analysis and insights generation.",analysis:"I consent to AI-powered analysis of my health data and biomarkers to provide personalized health insights.",research:"I consent to the use of my anonymized health data for research purposes to advance health science.",marketing:"I consent to receiving marketing communications about health products and services.",sharing:"I consent to sharing my health data with authorized healthcare providers."})[e]||"I provide my consent for this data processing activity."}getRequiredConsentsForOperation(e){return({analysis:["data_processing","analysis"],export:["data_processing"],sharing:["data_processing","sharing"],research:["data_processing","research"]})[e]||["data_processing"]}validatePrivacySettings(e){if(e.dataRetentionPeriod<1)throw Error("Data retention period must be at least 1 day");if(e.dataRetentionPeriod>3650)throw Error("Data retention period cannot exceed 10 years")}async logPrivacyChange(e,t,r){console.log(`[PRIVACY_AUDIT] User ${e} updated privacy settings:`,t)}getClientIP(e){return e.headers?.["x-forwarded-for"]?.split(",")[0]||e.headers?.["x-real-ip"]||"unknown"}}let i=new a,o=(e,t)=>i.validateConsentForOperation(e,t)},67297:(e,t,r)=>{r.d(t,{DM:()=>i,e4:()=>o,m5:()=>d,tk:()=>c});var s=r(84770);class n{constructor(){this.masterKey=process.env.PHI_ENCRYPTION_KEY||this.generateMasterKey(),this.currentKeyVersion=process.env.PHI_KEY_VERSION||"v1",process.env.PHI_ENCRYPTION_KEY||console.warn("PHI_ENCRYPTION_KEY not set. Using generated key for development only.")}generateMasterKey(){return s.randomBytes(32).toString("hex")}deriveKey(e,t){let r=`${this.masterKey}:${t}`;return s.pbkdf2Sync(r,e,1e5,32,"sha256")}createContentHash(e){return s.createHash("sha256").update(e).digest("hex")}encrypt(e,t="PHI"){try{let t=s.randomBytes(32),r=s.randomBytes(16),n=this.deriveKey(t,this.currentKeyVersion),a=s.createCipheriv("aes-256-cbc",n,r),i=a.update(e,"utf8","hex");return i+=a.final("hex"),{encryptedData:Buffer.concat([t,r,Buffer.from(i,"hex")]).toString("base64"),keyVersion:this.currentKeyVersion}}catch(e){throw Error(`PHI encryption failed: ${e.message}`)}}decrypt(e){try{let t=Buffer.from(e.encryptedData,"base64"),r=t.subarray(0,32),n=t.subarray(32,48),a=t.subarray(48),i=this.deriveKey(r,e.keyVersion),o=s.createDecipheriv("aes-256-cbc",i,n),c=o.update(a,void 0,"utf8");return c+=o.final("utf8")}catch(e){throw Error(`PHI decryption failed: ${e.message}`)}}hashForAudit(e){let t=process.env.AUDIT_SALT||"default-audit-salt";return s.pbkdf2Sync(e,t,1e4,32,"sha256").toString("hex")}generateSecureToken(e=32){return s.randomBytes(e).toString("hex")}validateIntegrity(e,t){let r=this.createContentHash(e);return s.timingSafeEqual(Buffer.from(t,"hex"),Buffer.from(r,"hex"))}}let a=new n,i=(e,t)=>a.encrypt(e,t),o=e=>a.hashForAudit(e),c=e=>a.generateSecureToken(e),d=e=>{let t={...e};for(let r of["email","name","city"])if(e[r]){let s=i(e[r]);t[`${r}_encrypted`]=s.encryptedData,t[`${r}_key_version`]=s.keyVersion,delete t[r]}return t}}};