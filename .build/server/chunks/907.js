"use strict";exports.id=907,exports.ids=[907],exports.modules={14749:(e,s,r)=>{r.d(s,{Ps:()=>i});var t=r(67297);class n{generateContentHash(e){let s=JSON.stringify({userId:e.userId,eventType:e.eventType,resource:e.resource,resourceId:e.resourceId,action:e.action,timestamp:new Date().toISOString(),success:e.success??!0});return(0,t.e4)(s)}assessRiskLevel(e){return"delete"===e.eventType||"delete"===e.action||e.errorMessage?.includes("unauthorized")||e.errorMessage?.includes("breach")?"critical":"export"===e.eventType||"system"===e.resource||"update"===e.action&&"user_profile"===e.resource?"high":"data_access"===e.eventType||"read"===e.action&&"user_profile"!==e.resource?"medium":"low"}sanitizeDataForLogging(e){if(!e)return null;let s={...e},r=["password","token","key","secret","ssn","dob"],t=e=>{if("object"!=typeof e||null===e)return e;let s=Array.isArray(e)?[]:{};for(let[n,i]of Object.entries(e)){let e=n.toLowerCase();r.some(s=>e.includes(s))?s[n]="[REDACTED]":"object"==typeof i?s[n]=t(i):s[n]=i}return s};return t(s)}async logEvent(e){try{let s=e.riskLevel||this.assessRiskLevel(e),r=this.generateContentHash(e),t=new Date,n={...e,timestamp:t,contentHash:r,riskLevel:s,success:e.success??!0,dataAccessed:this.sanitizeDataForLogging(e.dataAccessed),changes:this.sanitizeDataForLogging(e.changes)};console.log(`[AUDIT] ${JSON.stringify(n)}`),t.toISOString(),e.eventType,e.resource,e.action,e.userId}catch(e){throw console.error("Audit logging failed:",e),Error(`Audit logging failure: ${e.message}`)}}async logAuth(e,s,r,t=!0,n){await this.logEvent({userId:e,sessionId:r.sessionId,eventType:s,resource:"auth",action:s,ipAddress:this.getClientIP(r),userAgent:r.headers?.["user-agent"],endpoint:r.url,method:r.method,success:t,errorMessage:n,riskLevel:t?"low":"high"})}async logDataAccess(e,s,r,t,n,i,a){await this.logEvent({userId:e,sessionId:n.sessionId,eventType:"data_access",resource:s,resourceId:r,action:t,ipAddress:this.getClientIP(n),userAgent:n.headers?.["user-agent"],endpoint:n.url,method:n.method,dataAccessed:i,changes:a})}async logAnalysisRequest(e,s,r,t=!0,n){await this.logEvent({userId:e,sessionId:r.sessionId,eventType:"analysis_request",resource:"analysis",action:"create",ipAddress:this.getClientIP(r),userAgent:r.headers?.["user-agent"],endpoint:r.url,method:r.method,dataAccessed:{analysisType:s},success:t,errorMessage:n,riskLevel:t?"medium":"high"})}async logDataExport(e,s,r,t,n=!0){await this.logEvent({userId:e,sessionId:t.sessionId,eventType:"export",resource:"analysis",action:"export",ipAddress:this.getClientIP(t),userAgent:t.headers?.["user-agent"],endpoint:t.url,method:t.method,dataAccessed:{exportType:s,resourceCount:r.length},success:n,riskLevel:"high"})}async logSystemEvent(e,s,r,t="medium"){await this.logEvent({userId:r,eventType:"data_access",resource:"system",action:"read",dataAccessed:{eventType:e,details:s},riskLevel:t})}getClientIP(e){return e.headers?.["x-forwarded-for"]?.split(",")[0]||e.headers?.["x-real-ip"]||e.connection?.remoteAddress||e.socket?.remoteAddress||"unknown"}async queryAuditLogs(e){return[]}async generateComplianceReport(e,s){let r=await this.queryAuditLogs({startDate:e,endDate:s});return{period:{startDate:e,endDate:s},totalEvents:r.length,eventsByType:this.groupBy(r,"eventType"),eventsByRisk:this.groupBy(r,"riskLevel"),uniqueUsers:new Set(r.map(e=>e.userId)).size,complianceScore:this.calculateComplianceScore(r),recommendations:this.generateRecommendations(r)}}groupBy(e,s){return e.reduce((e,r)=>{let t=r[s]||"unknown";return e[t]=(e[t]||0)+1,e},{})}calculateComplianceScore(e){if(0===e.length)return 100;let s=e.filter(e=>"critical"===e.riskLevel).length;return Math.round(100*Math.max(0,100-(10*s+5*e.filter(e=>"high"===e.riskLevel).length+3*e.filter(e=>!e.success).length)/e.length*100))/100}generateRecommendations(e){let s=[];return e.filter(e=>"critical"===e.riskLevel).length>0&&s.push("Review and investigate critical risk events"),e.filter(e=>"login"===e.eventType&&!e.success).length>10&&s.push("Implement additional login security measures"),e.filter(e=>"export"===e.eventType).length>50&&s.push("Review data export patterns for compliance"),s}}let i=new n},67297:(e,s,r)=>{r.d(s,{DM:()=>a,e4:()=>o,m5:()=>c,tk:()=>A});var t=r(84770);class n{constructor(){this.masterKey=process.env.PHI_ENCRYPTION_KEY||this.generateMasterKey(),this.currentKeyVersion=process.env.PHI_KEY_VERSION||"v1",process.env.PHI_ENCRYPTION_KEY||console.warn("PHI_ENCRYPTION_KEY not set. Using generated key for development only.")}generateMasterKey(){return t.randomBytes(32).toString("hex")}deriveKey(e,s){let r=`${this.masterKey}:${s}`;return t.pbkdf2Sync(r,e,1e5,32,"sha256")}createContentHash(e){return t.createHash("sha256").update(e).digest("hex")}encrypt(e,s="PHI"){try{let s=t.randomBytes(32),r=t.randomBytes(16),n=this.deriveKey(s,this.currentKeyVersion),i=t.createCipheriv("aes-256-cbc",n,r),a=i.update(e,"utf8","hex");return a+=i.final("hex"),{encryptedData:Buffer.concat([s,r,Buffer.from(a,"hex")]).toString("base64"),keyVersion:this.currentKeyVersion}}catch(e){throw Error(`PHI encryption failed: ${e.message}`)}}decrypt(e){try{let s=Buffer.from(e.encryptedData,"base64"),r=s.subarray(0,32),n=s.subarray(32,48),i=s.subarray(48),a=this.deriveKey(r,e.keyVersion),o=t.createDecipheriv("aes-256-cbc",a,n),A=o.update(i,void 0,"utf8");return A+=o.final("utf8")}catch(e){throw Error(`PHI decryption failed: ${e.message}`)}}hashForAudit(e){let s=process.env.AUDIT_SALT||"default-audit-salt";return t.pbkdf2Sync(e,s,1e4,32,"sha256").toString("hex")}generateSecureToken(e=32){return t.randomBytes(e).toString("hex")}validateIntegrity(e,s){let r=this.createContentHash(e);return t.timingSafeEqual(Buffer.from(s,"hex"),Buffer.from(r,"hex"))}}let i=new n,a=(e,s)=>i.encrypt(e,s),o=e=>i.hashForAudit(e),A=e=>i.generateSecureToken(e),c=e=>{let s={...e};for(let r of["email","name","city"])if(e[r]){let t=a(e[r]);s[`${r}_encrypted`]=t.encryptedData,s[`${r}_key_version`]=t.keyVersion,delete s[r]}return s}},87907:(e,s,r)=>{r.d(s,{Sk:()=>T});var t,n,i=r(87070);(function(e){e.PATIENT="PATIENT",e.HEALTHCARE_PROVIDER="HEALTHCARE_PROVIDER",e.ADMIN="ADMIN",e.AUDITOR="AUDITOR",e.RESEARCHER="RESEARCHER"})(t||(t={})),function(e){e.READ_OWN_DATA="READ_OWN_DATA",e.READ_ALL_DATA="READ_ALL_DATA",e.WRITE_OWN_DATA="WRITE_OWN_DATA",e.WRITE_ALL_DATA="WRITE_ALL_DATA",e.DELETE_OWN_DATA="DELETE_OWN_DATA",e.DELETE_ALL_DATA="DELETE_ALL_DATA",e.EXPORT_DATA="EXPORT_DATA",e.MANAGE_USERS="MANAGE_USERS",e.VIEW_AUDIT_LOGS="VIEW_AUDIT_LOGS",e.SYSTEM_ADMIN="SYSTEM_ADMIN"}(n||(n={}));let a={PATIENT:["READ_OWN_DATA","WRITE_OWN_DATA","DELETE_OWN_DATA"],HEALTHCARE_PROVIDER:["READ_OWN_DATA","READ_ALL_DATA","WRITE_OWN_DATA","WRITE_ALL_DATA","EXPORT_DATA"],ADMIN:["READ_OWN_DATA","READ_ALL_DATA","WRITE_OWN_DATA","WRITE_ALL_DATA","DELETE_OWN_DATA","DELETE_ALL_DATA","EXPORT_DATA","MANAGE_USERS","VIEW_AUDIT_LOGS"],AUDITOR:["READ_ALL_DATA","VIEW_AUDIT_LOGS","EXPORT_DATA"],RESEARCHER:["READ_ALL_DATA","EXPORT_DATA"]},o={health_assessment:{read:["READ_OWN_DATA","READ_ALL_DATA"],write:["WRITE_OWN_DATA","WRITE_ALL_DATA"],delete:["DELETE_OWN_DATA","DELETE_ALL_DATA"]},biomarker:{read:["READ_OWN_DATA","READ_ALL_DATA"],write:["WRITE_OWN_DATA","WRITE_ALL_DATA"],delete:["DELETE_OWN_DATA","DELETE_ALL_DATA"]},analysis:{read:["READ_OWN_DATA","READ_ALL_DATA"],write:["WRITE_OWN_DATA","WRITE_ALL_DATA"],delete:["DELETE_OWN_DATA","DELETE_ALL_DATA"]},user_profile:{read:["READ_OWN_DATA","READ_ALL_DATA"],write:["WRITE_OWN_DATA","WRITE_ALL_DATA"],delete:["DELETE_OWN_DATA","DELETE_ALL_DATA"]},audit_logs:{read:["VIEW_AUDIT_LOGS"]},system_admin:{read:["SYSTEM_ADMIN"],write:["SYSTEM_ADMIN"],delete:["SYSTEM_ADMIN"]}};class A{static hasPermission(e,s){return e.permissions.includes(s)}static canAccessResource(e,s,r,t){let n=o[s];if(!n||!n[r])return!1;let i=n[r];return!!i.some(s=>e.permissions.includes(s))&&(!(t&&e.permissions.includes("READ_OWN_DATA")&&i.some(e=>e.toString().includes("OWN_DATA"))&&t!==e.userId)||i.some(s=>s.toString().includes("ALL_DATA")&&e.permissions.includes(s)))}static getPermissionsFromRoles(e){let s=new Set;return e.forEach(e=>{(a[e]||[]).forEach(e=>s.add(e))}),Array.from(s)}static isAdmin(e){return e.roles.includes("ADMIN")||e.permissions.includes("SYSTEM_ADMIN")}static canManageUsers(e){return e.permissions.includes("MANAGE_USERS")}static canViewAuditLogs(e){return e.permissions.includes("VIEW_AUDIT_LOGS")}static filterDataByPermissions(e,s,r){if(this.canAccessResource(e,r,"read")){if(e.permissions.includes("READ_ALL_DATA"))return s;if(e.permissions.includes("READ_OWN_DATA"))return s.filter(s=>s.userId===e.userId)}return[]}static createMiddleware(e,s){return(r,t)=>{if(!this.hasPermission(r,e))throw Error(`Access denied: Missing permission ${e}`);if(s&&t){let n=this.getActionFromPermission(e);if(!this.canAccessResource(r,s,n,t))throw Error(`Access denied: Cannot ${n} ${s}`)}return!0}}static getActionFromPermission(e){return e.toString().includes("READ")?"read":e.toString().includes("DELETE")?"delete":"write"}static canAssignRole(e,s){return!!this.isAdmin(e)&&(!!e.permissions.includes("SYSTEM_ADMIN")||!["ADMIN","AUDITOR"].includes(s))}}var c=r(14749);function u(e){return function(s){return async(r,...t)=>{try{let n=await d(r);if(!n)return await E(r,"No user context"),i.NextResponse.json({error:"Authentication required"},{status:401});if(e.requiredRole&&!n.roles.includes(e.requiredRole))return await E(r,`Missing required role: ${e.requiredRole}`,n.userId),i.NextResponse.json({error:"Insufficient privileges"},{status:403});if(e.requiredPermission&&!A.hasPermission(n,e.requiredPermission))return await E(r,`Missing required permission: ${e.requiredPermission}`,n.userId),i.NextResponse.json({error:"Insufficient privileges"},{status:403});if(e.resource){let s=function(e,s){let r=new URL(e.url),t=r.pathname.split("/").filter(Boolean).find(e=>e.startsWith("user-"));if(t)return t;let n=r.searchParams.get("userId");if(n)return n;"POST"===e.method||e.method}(r,0),t=l(r.method);if(!A.canAccessResource(n,e.resource,t,s))return await E(r,`Cannot ${t} ${e.resource}`,n.userId),i.NextResponse.json({error:"Access denied to resource"},{status:403})}r.userContext=n;let a=await s(r,...t);return e.skipAudit||await c.Ps.logEvent({userId:n.userId,sessionId:n.sessionId,eventType:"data_access",resource:e.resource||"system",action:l(r.method),ipAddress:_(r),userAgent:r.headers.get("user-agent")||void 0,endpoint:r.nextUrl.pathname,method:r.method,success:!0,riskLevel:"low"}),a}catch(e){return console.error("RBAC middleware error:",e),await c.Ps.logEvent({eventType:"data_access",resource:"system",action:"read",ipAddress:_(r),endpoint:r.nextUrl.pathname,method:r.method,success:!1,errorMessage:e.message,riskLevel:"critical"}),i.NextResponse.json({error:"Access control error"},{status:500})}}}}async function d(e){try{let s=e.headers.get("authorization"),r=e.cookies.get("session");if(!s&&!r)return null;return{userId:"user-123",roles:[t.PATIENT],permissions:[n.READ_OWN_DATA,n.WRITE_OWN_DATA],sessionId:"session-123"}}catch(e){return console.error("Failed to extract user context:",e),null}}function l(e){switch(e.toUpperCase()){case"GET":default:return"read";case"POST":case"PUT":case"PATCH":return"write";case"DELETE":return"delete"}}function _(e){let s=e.headers.get("x-forwarded-for"),r=e.headers.get("x-real-ip");return s?s.split(",")[0].trim():r||"unknown"}async function E(e,s,r){await c.Ps.logEvent({userId:r,eventType:"data_access",resource:"system",action:"read",ipAddress:_(e),userAgent:e.headers.get("user-agent")||void 0,endpoint:e.nextUrl.pathname,method:e.method,success:!1,errorMessage:`Unauthorized access: ${s}`,riskLevel:"high"})}u({requiredRole:t.ADMIN}),u({requiredRole:t.HEALTHCARE_PROVIDER}),u({requiredRole:t.AUDITOR}),u({resource:"health_assessment",requiredPermission:n.READ_OWN_DATA,allowOwnerAccess:!0}),u({resource:"analysis",requiredPermission:n.READ_OWN_DATA,allowOwnerAccess:!0});let T=u({requiredPermission:n.VIEW_AUDIT_LOGS,resource:"audit_logs"})}};