"use strict";(()=>{var e={};e.id=139,e.ids=[139],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},43369:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>C,patchFetch:()=>f,requestAsyncStorage:()=>v,routeModule:()=>h,serverHooks:()=>w,staticGenerationAsyncStorage:()=>y});var s={};a.r(s),a.d(s,{GET:()=>m,POST:()=>g});var n=a(49303),r=a(88716),i=a(60670),o=a(87070),c=a(87907),l=a(14749);async function u(e=new Date(Date.now()-864e5),t=new Date){try{let a;let s=await l.Ps.queryAuditLogs({startDate:e,endDate:t}),n=s.length,r=s.filter(e=>e.success).length,i=n>0?r/n*100:100,o=s.filter(e=>!e.success&&e.errorMessage?.includes("unauthorized")).length,c=n>0?Math.max(0,100-o/n*100):100,u=s.filter(e=>"critical"===e.riskLevel||"high"===e.riskLevel).length,p={auditCoverage:.25,encryptionRate:.25,consentRate:.2,dataRetentionCompliance:.15,accessControlCompliance:.15},d=i*p.auditCoverage+95*p.encryptionRate+98*p.consentRate+100*p.dataRetentionCompliance+c*p.accessControlCompliance;return a=d>=95&&0===u?"compliant":d>=85&&u<5?"warning":"violation",{auditCoverage:Math.round(100*i)/100,encryptionRate:Math.round(9500)/100,consentRate:Math.round(9800)/100,dataRetentionCompliance:Math.round(1e4)/100,accessControlCompliance:Math.round(100*c)/100,incidentCount:u,overallScore:Math.round(100*d)/100,status:a,lastUpdated:new Date().toISOString()}}catch(e){throw console.error("Failed to calculate compliance metrics:",e),e}}async function p(e=7){let t=[],a=new Date;for(let s=e-1;s>=0;s--){let e=new Date(a.getTime()-864e5*s),n=new Date(e.getTime()-864e5),r=await u(n,e);t.push({date:e.toISOString().split("T")[0],overallScore:r.overallScore,auditCoverage:r.auditCoverage,incidentCount:r.incidentCount,status:r.status})}return t}async function d(){let e=[],t=new Date,a=new Date(t.getTime()-864e5),s=await l.Ps.queryAuditLogs({startDate:a,riskLevel:"high"});(await l.Ps.queryAuditLogs({startDate:a,riskLevel:"critical"})).forEach(t=>{e.push({id:`alert_${t.id}`,type:"critical",title:"Critical Security Event",message:`${t.eventType} operation failed: ${t.errorMessage}`,timestamp:t.timestamp,userId:t.userId,resource:t.resource,action:t.action})});let n=s.filter(e=>"login"===e.eventType&&!e.success);return n.length>5&&e.push({id:`alert_failed_logins_${Date.now()}`,type:"warning",title:"Multiple Failed Login Attempts",message:`${n.length} failed login attempts in the last 24 hours`,timestamp:t.toISOString(),count:n.length}),e.sort((e,t)=>new Date(t.timestamp).getTime()-new Date(e.timestamp).getTime())}let m=(0,c.Sk)(async e=>{try{let{searchParams:t}=new URL(e.url),a=t.get("type")||"current",s=parseInt(t.get("days")||"7");switch(a){case"current":let n=await u();return o.NextResponse.json({success:!0,data:n});case"trends":let r=await p(s);return o.NextResponse.json({success:!0,data:r});case"alerts":let i=await d();return o.NextResponse.json({success:!0,data:i});default:return o.NextResponse.json({success:!1,error:"Invalid metrics type"},{status:400})}}catch(e){return console.error("Compliance metrics calculation failed:",e),o.NextResponse.json({success:!1,error:"Failed to calculate compliance metrics"},{status:500})}}),g=(0,c.Sk)(async e=>{try{let{thresholds:t,alertSettings:a}=await e.json();if(t){let e=["auditCoverage","encryptionRate","consentRate"];for(let[a,s]of Object.entries(t))if(!e.includes(a)||"number"!=typeof s||s<0||s>100)return o.NextResponse.json({success:!1,error:`Invalid threshold: ${a}`},{status:400})}console.log("[COMPLIANCE] Updated compliance settings:",{thresholds:t,alertSettings:a});let s=e.userContext;return await l.Ps.logSystemEvent("compliance_settings_updated",{thresholds:t,alertSettings:a},s.userId,"medium"),o.NextResponse.json({success:!0,message:"Compliance settings updated successfully"})}catch(e){return console.error("Failed to update compliance settings:",e),o.NextResponse.json({success:!1,error:"Failed to update compliance settings"},{status:500})}}),h=new n.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/compliance/metrics/route",pathname:"/api/compliance/metrics",filename:"route",bundlePath:"app/api/compliance/metrics/route"},resolvedPagePath:"/home/ubuntu/labinsight-ai-complete/app/api/compliance/metrics/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:v,staticGenerationAsyncStorage:y,serverHooks:w}=h,C="/api/compliance/metrics/route";function f(){return(0,i.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:y})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),s=t.X(0,[276,972,907],()=>a(43369));module.exports=s})();