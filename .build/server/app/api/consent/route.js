"use strict";(()=>{var e={};e.id=50,e.ids=[50],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},98461:(e,s,t)=>{t.r(s),t.d(s,{originalPathname:()=>m,patchFetch:()=>x,requestAsyncStorage:()=>f,routeModule:()=>v,serverHooks:()=>h,staticGenerationAsyncStorage:()=>y});var r={};t.r(r),t.d(r,{DELETE:()=>g,GET:()=>d,POST:()=>p,PUT:()=>l});var n=t(49303),o=t(88716),a=t(60670),c=t(87070),i=t(30467),u=t(14749);async function d(e){try{let{searchParams:s}=new URL(e.url),t=s.get("userId");if(!t)return c.NextResponse.json({success:!1,error:"User ID is required"},{status:400});let r=await i.PA.getUserConsents(t),n=await i.PA.getPrivacySettings(t),o=Object.keys(i.Ug).map(e=>i.Ug[e].type),a=r.map(e=>e.consentType),u=o.filter(e=>!a.includes(e)),d=u.length>0?i.PA.generateConsentForm(u):[];return c.NextResponse.json({success:!0,data:{consents:r,privacySettings:n,consentForm:d,consentTypes:i.Ug}})}catch(e){return console.error("Failed to get consent data:",e),c.NextResponse.json({success:!1,error:"Failed to retrieve consent data"},{status:500})}}async function p(e){try{let{userId:s,consentType:t,granted:r,consentText:n}=await e.json();if(!s||!t||"boolean"!=typeof r)return c.NextResponse.json({success:!1,error:"Missing required fields"},{status:400});if(!Object.values(i.Ug).map(e=>e.type).includes(t))return c.NextResponse.json({success:!1,error:"Invalid consent type"},{status:400});let o=await i.PA.recordConsent(s,t,r,e,n);return await u.Ps.logEvent({userId:s,eventType:"data_access",resource:"user_profile",action:"update",ipAddress:e.headers.get("x-forwarded-for")||"unknown",userAgent:e.headers.get("user-agent")||void 0,endpoint:"/api/consent",method:"POST",dataAccessed:{consentType:t,granted:r,action:r?"consent_granted":"consent_revoked"},success:!0,riskLevel:r?"low":"medium"}),c.NextResponse.json({success:!0,data:o,message:`Consent ${r?"granted":"revoked"} successfully`})}catch(e){return console.error("Failed to record consent:",e),c.NextResponse.json({success:!1,error:"Failed to record consent"},{status:500})}}async function l(e){try{let{userId:s,privacySettings:t}=await e.json();if(!s||!t)return c.NextResponse.json({success:!1,error:"Missing required fields"},{status:400});let r=await i.PA.updatePrivacySettings(s,t,e);return await u.Ps.logEvent({userId:s,eventType:"data_access",resource:"user_profile",action:"update",ipAddress:e.headers.get("x-forwarded-for")||"unknown",userAgent:e.headers.get("user-agent")||void 0,endpoint:"/api/consent",method:"PUT",dataAccessed:{privacySettingsUpdated:Object.keys(t)},changes:{before:{},after:t},success:!0,riskLevel:"low"}),c.NextResponse.json({success:!0,data:r,message:"Privacy settings updated successfully"})}catch(e){return console.error("Failed to update privacy settings:",e),c.NextResponse.json({success:!1,error:"Failed to update privacy settings"},{status:500})}}async function g(e){try{let{searchParams:s}=new URL(e.url),t=s.get("userId");if(!t)return c.NextResponse.json({success:!1,error:"User ID is required"},{status:400});return await i.PA.processDataDeletion(t,e),await u.Ps.logEvent({userId:t,eventType:"delete",resource:"user_profile",action:"delete",ipAddress:e.headers.get("x-forwarded-for")||"unknown",userAgent:e.headers.get("user-agent")||void 0,endpoint:"/api/consent",method:"DELETE",dataAccessed:{action:"data_deletion_requested"},success:!0,riskLevel:"high"}),c.NextResponse.json({success:!0,message:"Data deletion request processed successfully"})}catch(s){return console.error("Failed to process data deletion:",s),await u.Ps.logEvent({userId:e.nextUrl.searchParams.get("userId")||void 0,eventType:"delete",resource:"user_profile",action:"delete",ipAddress:e.headers.get("x-forwarded-for")||"unknown",endpoint:"/api/consent",method:"DELETE",success:!1,errorMessage:s.message,riskLevel:"critical"}),c.NextResponse.json({success:!1,error:s.message},{status:500})}}let v=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/consent/route",pathname:"/api/consent",filename:"route",bundlePath:"app/api/consent/route"},resolvedPagePath:"/home/ubuntu/labinsight-ai-complete/app/api/consent/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:f,staticGenerationAsyncStorage:y,serverHooks:h}=v,m="/api/consent/route";function x(){return(0,a.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:y})}}};var s=require("../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[276,972,753],()=>t(98461));module.exports=r})();